
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ArrowRight, X, CheckCircle } from 'lucide-react';

interface BeforeAfterComparisonProps {
  language: 'en' | 'hi' | 'ta' | 'te' | 'bn';
}

export const BeforeAfterComparison: React.FC<BeforeAfterComparisonProps> = ({ language }) => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const translations = {
    en: {
      title: 'See the Difference AI Makes',
      subtitle: 'Compare traditional farming vs AI-powered decisions',
      traditional: 'Traditional Method',
      aiPowered: 'AI-Powered Method',
      swipeToCompare: 'Tap to Compare',
      beforeScenarios: [
        {
          title: 'Harvest Too Early',
          description: 'Farmer guesses ripeness',
          outcome: '25% crop loss due to premature harvest',
          icon: 'ЁЯМ▒'
        },
        {
          title: 'Poor Route Planning',
          description: 'Manual route selection',
          outcome: '40% longer delivery time',
          icon: 'ЁЯЪЫ'
        },
        {
          title: 'No Freshness Tracking',
          description: 'No monitoring during transport',
          outcome: '30% spoilage at destination',
          icon: 'ЁЯУж'
        }
      ],
      afterScenarios: [
        {
          title: 'Perfect Timing',
          description: 'AI predicts optimal harvest window',
          outcome: '92% harvest efficiency achieved',
          icon: 'ЁЯМ╛'
        },
        {
          title: 'Smart Routing',
          description: 'AI optimizes delivery path',
          outcome: '35% faster delivery with freshness preserved',
          icon: 'ЁЯОп'
        },
        {
          title: 'Real-time Monitoring',
          description: 'Continuous freshness tracking',
          outcome: '85% reduction in spoilage',
          icon: 'ЁЯУК'
        }
      ]
    },
    hi: {
      title: 'рджреЗрдЦреЗрдВ рдПрдЖрдИ рдХреИрд╕реЗ рдмрджрд▓рд╛рд╡ рд▓рд╛рддрд╛ рд╣реИ',
      subtitle: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЦреЗрддреА рдмрдирд╛рдо рдПрдЖрдИ-рд╕рдВрдЪрд╛рд▓рд┐рдд рдирд┐рд░реНрдгрдпреЛрдВ рдХреА рддреБрд▓рдирд╛ рдХрд░реЗрдВ',
      traditional: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рд╡рд┐рдзрд┐',
      aiPowered: 'рдПрдЖрдИ-рд╕рдВрдЪрд╛рд▓рд┐рдд рд╡рд┐рдзрд┐',
      swipeToCompare: 'рддреБрд▓рдирд╛ рдХреЗ рд▓рд┐рдП рдЯреИрдк рдХрд░реЗрдВ',
      beforeScenarios: [
        {
          title: 'рдЬрд▓реНрджреА рдХрдЯрд╛рдИ',
          description: 'рдХрд┐рд╕рд╛рди рдкрдХрдиреЗ рдХрд╛ рдЕрдиреБрдорд╛рди рд▓рдЧрд╛рддрд╛ рд╣реИ',
          outcome: 'рд╕рдордп рд╕реЗ рдкрд╣рд▓реЗ рдХрдЯрд╛рдИ рдХреЗ рдХрд╛рд░рдг 25% рдлрд╕рд▓ рд╣рд╛рдирд┐',
          icon: 'ЁЯМ▒'
        },
        {
          title: 'рдЦрд░рд╛рдм рдорд╛рд░реНрдЧ рдпреЛрдЬрдирд╛',
          description: 'рдореИрдиреБрдЕрд▓ рдорд╛рд░реНрдЧ рдЪрдпрди',
          outcome: '40% рдЕрдзрд┐рдХ рдбрд┐рд▓реАрд╡рд░реА рд╕рдордп',
          icon: 'ЁЯЪЫ'
        },
        {
          title: 'рдХреЛрдИ рддрд╛рдЬрдЧреА рдЯреНрд░реИрдХрд┐рдВрдЧ рдирд╣реАрдВ',
          description: 'рдкрд░рд┐рд╡рд╣рди рдХреЗ рджреМрд░рд╛рди рдХреЛрдИ рдирд┐рдЧрд░рд╛рдиреА рдирд╣реАрдВ',
          outcome: 'рдЧрдВрддрд╡реНрдп рдкрд░ 30% рдЦрд░рд╛рдмреА',
          icon: 'ЁЯУж'
        }
      ],
      afterScenarios: [
        {
          title: 'рд╕рд╣реА рд╕рдордп',
          description: 'рдПрдЖрдИ рдЗрд╖реНрдЯрддрдо рдХрдЯрд╛рдИ рдЦрд┐рдбрд╝рдХреА рдХреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдХрд░рддрд╛ рд╣реИ',
          outcome: '92% рдХрдЯрд╛рдИ рджрдХреНрд╖рддрд╛ рдкреНрд░рд╛рдкреНрдд',
          icon: 'ЁЯМ╛'
        },
        {
          title: 'рд╕реНрдорд╛рд░реНрдЯ рд░реВрдЯрд┐рдВрдЧ',
          description: 'рдПрдЖрдИ рдбрд┐рд▓реАрд╡рд░реА рдкрде рдХрд╛ рдЕрдиреБрдХреВрд▓рди рдХрд░рддрд╛ рд╣реИ',
          outcome: 'рддрд╛рдЬрдЧреА рд╕рдВрд░рдХреНрд╖рд┐рдд рдХреЗ рд╕рд╛рде 35% рддреЗрдЬ рдбрд┐рд▓реАрд╡рд░реА',
          icon: 'ЁЯОп'
        },
        {
          title: 'рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рдирд┐рдЧрд░рд╛рдиреА',
          description: 'рдирд┐рд░рдВрддрд░ рддрд╛рдЬрдЧреА рдЯреНрд░реИрдХрд┐рдВрдЧ',
          outcome: 'рдЦрд░рд╛рдмреА рдореЗрдВ 85% рдХрдореА',
          icon: 'ЁЯУК'
        }
      ]
    },
    ta: {
      title: 'AI роОро╡рпНро╡ро│ро╡рпБ ро╡ро┐родрпНродро┐ропро╛роЪроорпН роЪрпЖропрпНроХро┐ро▒родрпБ роОройрпНрокродрпИрокрпН рокро╛ро░рпБроЩрпНроХро│рпН',
      subtitle: 'рокро╛ро░роорпНрокро░ро┐роп ро╡ро┐ро╡роЪро╛ропроорпН vs AI-роЗропроЩрпНроХрпБроорпН роорпБроЯро┐ро╡рпБроХро│рпИ роТрокрпНрокро┐роЯрпБроЩрпНроХро│рпН',
      traditional: 'рокро╛ро░роорпНрокро░ро┐роп роорпБро▒рпИ',
      aiPowered: 'AI-роЗропроЩрпНроХрпБроорпН роорпБро▒рпИ',
      swipeToCompare: 'роТрокрпНрокро┐роЯ родроЯрпНроЯро╡рпБроорпН',
      beforeScenarios: [
        {
          title: 'роорпБройрпНроХрпВроЯрпНроЯро┐роп роЕро▒рпБро╡роЯрпИ',
          description: 'ро╡ро┐ро╡роЪро╛ропро┐ рокро┤рпБродрпНрод роиро┐ро▓рпИропрпИ роЕройрпБрооро╛ройро┐роХрпНроХро┐ро▒ро╛ро░рпН',
          outcome: 'роорпБройрпНроХрпВроЯрпНроЯро┐роп роЕро▒рпБро╡роЯрпИропро╛ро▓рпН 25% рокропро┐ро░рпН роЗро┤рокрпНрокрпБ',
          icon: 'ЁЯМ▒'
        },
        {
          title: 'роорпЛроЪрооро╛рой рокро╛родрпИ родро┐роЯрпНроЯрооро┐роЯро▓рпН',
          description: 'роХрпИроорпБро▒рпИ рокро╛родрпИ родрпЗро░рпНро╡рпБ',
          outcome: '40% роЕродро┐роХ роЯрпЖро▓ро┐ро╡ро░ро┐ роирпЗро░роорпН',
          icon: 'ЁЯЪЫ'
        },
        {
          title: 'рокрпБродрпНродрпБрогро░рпНро╡рпБ роХрогрпНроХро╛рогро┐рокрпНрокрпБ роЗро▓рпНро▓рпИ',
          description: 'рокрпЛроХрпНроХрпБро╡ро░родрпНродро┐ройрпН рокрпЛродрпБ роХрогрпНроХро╛рогро┐рокрпНрокрпБ роЗро▓рпНро▓рпИ',
          outcome: 'роЗро▓роХрпНроХро┐ро▓рпН 30% роХрпЖроЯрпНроЯрпБрокрпНрокрпЛродро▓рпН',
          icon: 'ЁЯУж'
        }
      ],
      afterScenarios: [
        {
          title: 'роЪро░ро┐ропро╛рой роирпЗро░роорпН',
          description: 'AI роЪро┐ро▒роирпНрод роЕро▒рпБро╡роЯрпИ роЪро╛ро│ро░родрпНродрпИ роорпБройрпНройро▒ро┐ро╡ро┐роХрпНроХро┐ро▒родрпБ',
          outcome: '92% роЕро▒рпБро╡роЯрпИ родро┐ро▒ройрпН роЕроЯрпИроирпНродродрпБ',
          icon: 'ЁЯМ╛'
        },
        {
          title: 'рокрпБродрпНродро┐роЪро╛ро▓ро┐ ро╡ро┤ро┐ропроорпИрокрпНрокрпБ',
          description: 'AI роЯрпЖро▓ро┐ро╡ро░ро┐ рокро╛родрпИропрпИ роорпЗроорпНрокроЯрпБродрпНродрпБроХро┐ро▒родрпБ',
          outcome: 'рокрпБродрпНродрпБрогро░рпНро╡рпБ рокро╛родрпБроХро╛роХрпНроХрокрпНрокроЯрпНроЯ 35% ро╡рпЗроХрооро╛рой роЯрпЖро▓ро┐ро╡ро░ро┐',
          icon: 'ЁЯОп'
        },
        {
          title: 'роиро┐роХро┤рпНроирпЗро░ роХрогрпНроХро╛рогро┐рокрпНрокрпБ',
          description: 'родрпКроЯро░рпНроЪрпНроЪро┐ропро╛рой рокрпБродрпНродрпБрогро░рпНро╡рпБ роХрогрпНроХро╛рогро┐рокрпНрокрпБ',
          outcome: 'роХрпЖроЯрпНроЯрпБрокрпНрокрпЛродро▓ро┐ро▓рпН 85% роХрпБро▒рпИрокрпНрокрпБ',
          icon: 'ЁЯУК'
        }
      ]
    },
    te: {
      title: 'AI р░Ор░Вр░д р░др▒Зр░бр░╛ р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр▒Л р░Ър▒Вр░бр░Вр░бр░┐',
      subtitle: 'р░╕р░╛р░Вр░кр▒Нр░░р░жр░╛р░п р░╡р▒Нр░пр░╡р░╕р░╛р░пр░В vs AI-р░╢р░Хр▒Нр░др░┐р░др▒Л р░Хр▒Вр░бр░┐р░и р░ир░┐р░░р▒Нр░гр░пр░╛р░▓р░ир▒Б р░кр▒Лр░▓р▒Нр░Ър░Вр░бр░┐',
      traditional: 'р░╕р░╛р░Вр░кр▒Нр░░р░жр░╛р░п р░кр░жр▒Нр░зр░др░┐',
      aiPowered: 'AI-р░╢р░Хр▒Нр░др░┐р░др▒Л р░Хр▒Вр░бр░┐р░и р░кр░жр▒Нр░зр░др░┐',
      swipeToCompare: 'р░кр▒Лр░▓р▒Нр░Ър░бр░╛р░ир░┐р░Хр░┐ р░ир▒Кр░Хр▒Нр░Хр░Вр░бр░┐',
      beforeScenarios: [
        {
          title: 'р░ор▒Бр░Вр░жр▒Бр░Чр░╛р░ир▒З р░Хр▒Лр░д',
          description: 'р░░р▒Ир░др▒Б р░кр░Хр▒Нр░╡р░др░ир▒Б р░Ер░Вр░Ър░ир░╛ р░╡р▒Зр░╕р▒Нр░др░╛р░бр▒Б',
          outcome: 'р░ор▒Бр░Вр░жр░╕р▒Нр░др▒Б р░Хр▒Лр░д р░╡р░▓р▒Нр░▓ 25% р░кр░Вр░Я р░ир░╖р▒Нр░Яр░В',
          icon: 'ЁЯМ▒'
        },
        {
          title: 'р░Ър▒Жр░бр▒Б р░ор░╛р░░р▒Нр░Ч р░кр▒Нр░▓р░╛р░ир░┐р░Вр░Чр▒Н',
          description: 'р░ор░╛р░ир▒Нр░пр▒Бр░╡р░▓р▒Н р░ор░╛р░░р▒Нр░Ч р░Ор░Вр░кр░┐р░Х',
          outcome: '40% р░Ор░Хр▒Нр░Хр▒Бр░╡ р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р░ор░пр░В',
          icon: 'ЁЯЪЫ'
        },
        {
          title: 'р░др░╛р░Ьр░╛р░жр░ир░В р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н р░▓р▒Зр░жр▒Б',
          description: 'р░░р░╡р░╛р░гр░╛ р░╕р░ор░пр░Вр░▓р▒Л р░кр░░р▒Нр░пр░╡р▒Зр░Хр▒Нр░╖р░г р░▓р▒Зр░жр▒Б',
          outcome: 'р░Чр░ор▒Нр░пр░╕р▒Нр░ер░╛р░ир░Вр░▓р▒Л 30% р░Ър▒Жр░бр░┐р░кр▒Лр░╡р░бр░В',
          icon: 'ЁЯУж'
        }
      ],
      afterScenarios: [
        {
          title: 'р░кр░░р▒Нр░лр▒Жр░Хр▒Нр░Яр▒Н р░Яр▒Ир░ор░┐р░Вр░Чр▒Н',
          description: 'AI р░╕р░░р▒Ир░и р░Хр▒Лр░д р░Хр░┐р░Яр░┐р░Хр▒Ар░ир░┐ р░Ер░Вр░Ър░ир░╛ р░╡р▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐',
          outcome: '92% р░Хр▒Лр░д р░╕р░╛р░ор░░р▒Нр░ер▒Нр░пр░В р░╕р░╛р░зр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐',
          icon: 'ЁЯМ╛'
        },
        {
          title: 'р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░░р▒Вр░Яр░┐р░Вр░Чр▒Н',
          description: 'AI р░бр▒Жр░▓р░┐р░╡р░░р▒А р░ор░╛р░░р▒Нр░Чр░╛р░ир▒Нр░ир░┐ р░Жр░кр▒Нр░Яр░┐р░ор▒Ир░Ьр▒Н р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐',
          outcome: 'р░др░╛р░Ьр░╛р░жр░ир░В р░нр░жр▒Нр░░р░кр░░р░Ър░мр░бр░┐р░и 35% р░╡р▒Зр░Чр░╡р░Вр░др░ор▒Ир░и р░бр▒Жр░▓р░┐р░╡р░░р▒А',
          icon: 'ЁЯОп'
        },
        {
          title: 'р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░ор░╛р░ир░┐р░Яр░░р░┐р░Вр░Чр▒Н',
          description: 'р░ир░┐р░░р░Вр░др░░ р░др░╛р░Ьр░╛р░жр░ир░В р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н',
          outcome: 'р░Ър▒Жр░бр░┐р░кр▒Лр░╡р░бр░Вр░▓р▒Л 85% р░др░Чр▒Нр░Чр░┐р░Вр░кр▒Б',
          icon: 'ЁЯУК'
        }
      ]
    },
    bn: {
      title: 'AI ржХрждржЯрж╛ ржкрж╛рж░рзНржержХрзНржп ржЖржирзЗ рждрж╛ ржжрзЗржЦрзБржи',
      subtitle: 'ржРрждрж┐рж╣рзНржпржмрж╛рж╣рзА ржХрзГрж╖рж┐ ржмржирж╛ржо AI-ржЪрж╛рж▓рж┐ржд рж╕рж┐ржжрзНржзрж╛ржирзНрждрзЗрж░ рждрзБрж▓ржирж╛ ржХрж░рзБржи',
      traditional: 'ржРрждрж┐рж╣рзНржпржмрж╛рж╣рзА ржкржжрзНржзрждрж┐',
      aiPowered: 'AI-ржЪрж╛рж▓рж┐ржд ржкржжрзНржзрждрж┐',
      swipeToCompare: 'рждрзБрж▓ржирж╛рж░ ржЬржирзНржп ржЯрзНржпрж╛ржк ржХрж░рзБржи',
      beforeScenarios: [
        {
          title: 'рждрж╛ржбрж╝рж╛рждрж╛ржбрж╝рж┐ ржлрж╕рж▓ ржХрж╛ржЯрж╛',
          description: 'ржХрзГрж╖ржХ ржкрж╛ржХрж╛рж░ ржЕржирзБржорж╛ржи ржХрж░рзЗ',
          outcome: 'ржЕржХрж╛рж▓ ржлрж╕рж▓ ржХрж╛ржЯрж╛рж░ ржХрж╛рж░ржгрзЗ рзирзл% ржлрж╕рж▓ ржХрзНрж╖рждрж┐',
          icon: 'ЁЯМ▒'
        },
        {
          title: 'ржЦрж╛рж░рж╛ржк рж░рзБржЯ ржкрж░рж┐ржХрж▓рзНржкржирж╛',
          description: 'ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ рж░рзБржЯ ржирж┐рж░рзНржмрж╛ржЪржи',
          outcome: 'рзкрзж% ржмрзЗрж╢рж┐ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ рж╕ржоржпрж╝',
          icon: 'ЁЯЪЫ'
        },
        {
          title: 'рждрж╛ржЬрж╛рждрзНржм ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ ржирзЗржЗ',
          description: 'ржкрж░рж┐ржмрж╣ржирзЗрж░ рж╕ржоржпрж╝ ржХрзЛржирзЛ ржирж┐рж░рзАржХрзНрж╖ржг ржирзЗржЗ',
          outcome: 'ржЧржирзНрждржмрзНржпрзЗ рзйрзж% ржирж╖рзНржЯ',
          icon: 'ЁЯУж'
        }
      ],
      afterScenarios: [
        {
          title: 'ржирж┐ржЦрзБржБржд рж╕ржоржпрж╝',
          description: 'AI рж╕рж░рзНржмрзЛрждрзНрждржо ржлрж╕рж▓ ржХрж╛ржЯрж╛рж░ рж╕ржоржпрж╝ ржкрзВрж░рзНржмрж╛ржнрж╛рж╕ ржжрзЗржпрж╝',
          outcome: 'рзпрзи% ржлрж╕рж▓ ржХрж╛ржЯрж╛рж░ ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬрж┐ржд',
          icon: 'ЁЯМ╛'
        },
        {
          title: 'рж╕рзНржорж╛рж░рзНржЯ рж░рзБржЯрж┐ржВ',
          description: 'AI ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржкрже ржЕржкрзНржЯрж┐ржорж╛ржЗржЬ ржХрж░рзЗ',
          outcome: 'рждрж╛ржЬрж╛рждрзНржм рж╕ржВрж░ржХрзНрж╖рж┐ржд рзйрзл% ржжрзНрж░рзБржд ржбрзЗрж▓рж┐ржнрж╛рж░рж┐',
          icon: 'ЁЯОп'
        },
        {
          title: 'рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо ржоржирж┐ржЯрж░рж┐ржВ',
          description: 'ржХрзНрж░ржорж╛ржЧржд рждрж╛ржЬрж╛рждрзНржм ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ',
          outcome: 'ржирж╖рзНржЯ рж╣ржУржпрж╝рж╛ржпрж╝ рзорзл% рж╣рзНрж░рж╛рж╕',
          icon: 'ЁЯУК'
        }
      ]
    }
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % translations[language].beforeScenarios.length);
  };

  return (
    <div className="text-center">
      <h3 className="text-3xl font-bold text-gray-900 mb-4">
        {translations[language].title}
      </h3>
      <p className="text-lg text-gray-600 mb-12">
        {translations[language].subtitle}
      </p>

      <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
        {/* Before (Traditional) */}
        <Card className="border-2 border-red-200 bg-red-50">
          <CardHeader>
            <div className="flex items-center justify-center gap-2 mb-4">
              <X className="h-6 w-6 text-red-600" />
              <CardTitle className="text-red-800">
                {translations[language].traditional}
              </CardTitle>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="text-6xl mb-4">
                {translations[language].beforeScenarios[currentSlide].icon}
              </div>
              <h4 className="text-xl font-semibold text-red-800">
                {translations[language].beforeScenarios[currentSlide].title}
              </h4>
              <p className="text-red-700">
                {translations[language].beforeScenarios[currentSlide].description}
              </p>
              <Badge variant="destructive" className="text-sm">
                {translations[language].beforeScenarios[currentSlide].outcome}
              </Badge>
            </div>
          </CardContent>
        </Card>

        {/* After (AI-Powered) */}
        <Card className="border-2 border-green-200 bg-green-50">
          <CardHeader>
            <div className="flex items-center justify-center gap-2 mb-4">
              <CheckCircle className="h-6 w-6 text-green-600" />
              <CardTitle className="text-green-800">
                {translations[language].aiPowered}
              </CardTitle>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="text-6xl mb-4">
                {translations[language].afterScenarios[currentSlide].icon}
              </div>
              <h4 className="text-xl font-semibold text-green-800">
                {translations[language].afterScenarios[currentSlide].title}
              </h4>
              <p className="text-green-700">
                {translations[language].afterScenarios[currentSlide].description}
              </p>
              <Badge className="bg-green-100 text-green-800 text-sm">
                {translations[language].afterScenarios[currentSlide].outcome}
              </Badge>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Navigation */}
      <div className="mt-8">
        <Button onClick={nextSlide} className="bg-green-600 hover:bg-green-700">
          {translations[language].swipeToCompare}
          <ArrowRight className="h-4 w-4 ml-2" />
        </Button>
        
        <div className="flex justify-center gap-2 mt-4">
          {translations[language].beforeScenarios.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentSlide(index)}
              className={`w-3 h-3 rounded-full transition-colors ${
                index === currentSlide ? 'bg-green-600' : 'bg-gray-300'
              }`}
            />
          ))}
        </div>
      </div>
    </div>
  );
};
